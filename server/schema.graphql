
type Traveler {
  serialNo: Int!
  name: String
  phone: Int
  created: String
}

type Message {
  valid: Int!
  msg: String
}
input TravelerInput {
  name: String
  phone: Int
}

##### Top level declarations

type Query {
  about: String!
  readTraveler: [Traveler!]!
}

type Mutation {
  addTraveler(Traveler: TravelerInput!): Message
  addBlacklist(Traveler: TravelerInput!): Message
  deleteTraveler(serialNo: Int!): Message
}
